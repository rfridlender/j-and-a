name: "Deploy Site"
on:
  push:
    branches: [prod, staging, dev]
    paths: [.github/workflows/deploy-site.yml, site/**]
permissions:
  contents: read
  id-token: write
jobs:
  deploy_site:
    name: "Deploy Site"
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name == 'prod' && 'prod' || github.ref_name == 'staging' && 'staging' || 'dev' }}
    defaults:
      run:
        shell: bash
        working-directory: site/
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Configure Git credentials
        run: git config --global url."https://${{ vars.FINE_GRAINED_GITHUB_TOKEN }}@github.com".insteadOf "https://github.com"
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ vars.IAM_GITHUB_OIDC_ROLE_ARN }}
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
      - name: Check Terraform format
        run: terraform fmt -check
      - name: Initialize Terraform
        working-directory: environments/${{ github.ref_name }}/
        run: terraform init -input=false
      - name: Export Terraform outputs
        id: terraform-outputs
        working-directory: environments/${{ github.ref_name }}/
        run: |
          terraform output -json > outputs.json
          echo "CLOUDFRONT_DISTRIBUTION_ID=$(jq -r '.cloudfront_distribution_id.value' outputs.json)" >> $GITHUB_OUTPUT
          echo "SITE_S3_BUCKET_NAME=$(jq -r '.site_s3_bucket_name.value' outputs.json)" >> $GITHUB_OUTPUT
          echo "VITE_USER_POOL_ID=$(jq -r '.vite_user_pool_id.value' outputs.json)" >> $GITHUB_OUTPUT
          echo "VITE_USER_POOL_CLIENT_ID=$(jq -r '.vite_user_pool_client_id.value' outputs.json)" >> $GITHUB_OUTPUT
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Clean install dependencies
        run: npm clean-install
      - name: Build
        env:
          VITE_USER_POOL_ID: ${{ steps.terraform-outputs.outputs.VITE_USER_POOL_ID }}
          VITE_USER_POOL_CLIENT_ID: ${{ steps.terraform-outputs.outputs.VITE_USER_POOL_CLIENT_ID }}
        run: npm run build
      - name: Sync bucket
        run: aws s3 sync dist/ s3://${{ steps.terraform-outputs.outputs.SITE_S3_BUCKET_NAME }}/ --delete
      - name: Create invalidation
        run: aws cloudfront create-invalidation --distribution-id ${{ steps.terraform-outputs.outputs.CLOUDFRONT_DISTRIBUTION_ID }} --paths /*
