name: "Deploy Environment Infrastructure"
on:
  push:
    branches: [prod, staging, dev]
    paths: [cmd/**, environments/**, internal/**, pkg/**]
permissions:
  contents: read
  id-token: write
jobs:
  deploy_environment_infrastructure:
    name: "Deploy Environment Infrastructure"
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name == 'prod' && 'prod' || github.ref_name == 'staging' && 'staging' || 'dev' }}
    defaults:
      run:
        shell: bash
        working-directory: environments/${{ github.ref_name }}/
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Check env
        run: env | grep TF_VAR_
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.4'
      - name: Confirm Go version
        run: go version
      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Install dependencies
        run: go mod tidy
      - name: Build Go functions
        working-directory: cmd/
        run: |
          for dir in *; do
            if [ -d $dir ]; then
              echo "Building $(basename $dir)..."
              GOOS=linux GOARCH=arm64 go build -tags lambda.norpc -o $dir/bootstrap $dir/main.go
              echo "Build complete for $(basename $dir)."
            fi
          done
      - name: Configure Git credentials
        run: git config --global url."https://${{ vars.TF_VAR_fine_grained_github_token }}@github.com".insteadOf "https://github.com"
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.TF_VAR_aws_region }}
          role-to-assume: ${{ vars.TF_VAR_iam_github_oidc_role_arn }}
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
      - name: Check Terraform format
        run: terraform fmt -check
      - name: Initialize Terraform
        run: terraform init -input=false
      - name: Apply Terraform infrastructure
        run: terraform apply -input=false -auto-approve
