name: "Deploy Environment Infrastructure"
on:
  push:
    branches: [prod, staging, dev]
    paths: [environments/**]
permissions:
  contents: read
  id-token: write
jobs:
  deploy_environment_infrastructure:
    name: "Deploy Environment Infrastructure"
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name == 'prod' && 'prod' || github.ref_name == 'staging' && 'staging' || 'dev' }}
    defaults:
      run:
        shell: bash
        working-directory: environments/${{ github.ref_name }}/
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ vars.IAM_GITHUB_OIDC_ROLE_ARN }}
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
      - name: Check Terraform Format
        run: terraform fmt -check
      - name: Generate terraform.tfvars File
        run: |
          cat <<EOF > terraform.tfvars
          aws_region          = "${{ vars.AWS_REGION }}"
          aws_ses_email       = "${{ vars.AWS_SES_EMAIL }}"
          aws_ses_email_arn   = "${{ vars.AWS_SES_EMAIL_ARN }}"
          environment         = "${{ vars.ENVIRONMENT }}"
          github_account_name = "${{ github.event.repository.owner }}"
          project_name        = "${{ vars.PROJECT_NAME }}"
          EOF
      - name: Initialize Terraform
        run: terraform init -input=false
      - name: Apply Terraform Infrastructure
        run: terraform apply -input=false -auto-approve
